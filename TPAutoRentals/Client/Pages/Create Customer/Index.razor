@page "/createcustomer/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Car Customers</h3>
<a href="/createcustomer/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Customer
</a>
<br />
<br />
<div class="form-group">
    @* Search bar to search for customers *@
    <label>Search: </label>
    <div>
        <InputText @bind-Value="@keyword" class="form-control" />
    </div>
</div>
@if (Customers == null)
{
    <div class="alert alert-info">Loading Customers</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Profile Picture</th>
                <th>Name</th>
                <th>License Class</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
                if (customer.CusName.ToLower().Contains(keyword) || customer.CusLicenseClass.ToLower().Contains(keyword))
                {
                    <tr>
                        <td>
                            @if (customer.CusProfileImage == null)
                            {
                                <img src="Images/nopfp.png" alt="Image Unavailable" height="50" width="auto">
                            }
                            else
                            {
                                <img src="Images/@customer.CusProfileImage" alt="@customer.CusProfileImage" height="50" width="auto">
                            }
                    </td>
                    <td>@customer.CusName</td>
                    <td>@customer.CusLicenseClass</td>
                    <td>
                        <a href="/createcustomer/view/@customer.ID" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/createcustomer/edit/@customer.ID" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>
}


@code {
    private List<Customer>? Customers;
    private string keyword = "";

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }
}